#ip 4
00: seti 123 0 1      // r1 = 123
01: bani 1 456 1      // r1 = r1 & 456
02: eqri 1 72 1       // r1 = (r1 == 72)     (= 1)
03: addr 1 4 4        // if r1, jump to 5, else jump to 4 (= jump to 5)
04: seti 0 0 4        // jump to 0+1=1       (skipped, would cause infinite loop)
05: seti 0 3 1        // r1 = 0
06: bori 1 65536 2    // r2 = r1 | 0x1_0000  (= 0x1_0000)
07: seti 7902108 7 1  // r1 = 0x78_939C
08: bani 2 255 5      // r5 = r2 & 0xFF      (LOOP 1 START)
09: addr 1 5 1        // r1 = r1 + r5
10: bani 1 16777215 1 // r1 = r1 & 0xFF_FFFF
11: muli 1 65899 1    // r1 = r1 * 0x10_16B
12: bani 1 16777215 1 // r1 = r1 & 0xFF_FFFF
13: gtir 256 2 5      // r5 = (0xFF > r2)
14: addr 5 4 4        // if r5, jump to 16, else jump to 15 (= jump to 15)
15: addi 4 1 4        // jump to 15+1+1=17
16: seti 27 0 4       // jump to 27+1=28     (LOOP 1 EXIT)
17: seti 0 0 5        // r5 = 0
18: addi 5 1 3        // r3 = r5 + 1         (LOOP 2 START)
19: muli 3 256 3      // r3 = r3 * 256       (r3 = 256 * r5)
20: gtrr 3 2 3        // r3 = (r3 > r2)
21: addr 3 4 4        // if r3, jump to 23, else jump to 22 (= jump to 22)
22: addi 4 1 4        // jump to 22+1+1=24
23: seti 25 2 4       // jump to 25+1=26     (LOOP 2 EXIT)
24: addi 5 1 5        // r5 = r5 + 1
25: seti 17 2 4       // jump to 17+1=18     (RESTART LOOP 2)
26: setr 5 1 2        // r2 = r5
27: seti 7 2 4        // jump to 7+1=8       (RESTART LOOP 1)
28: eqrr 1 0 5        // r5 = (r1 == r0)     (** DOES THE COMPUTED R1 MATCH INPUT R0 ??? **)
29: addr 5 4 4        // if r5, exit program, else jump to 30
30: seti 5 9 4        // jump to 5+1=6       (retry the whole thing)
